#!/bin/bash

PROJECT_NAME="TC++PL"
BUILD_TYPE="Release"
#BUILD_TYPE="Debug"
BUILD_DIR="$BUILD_TYPE"
OUTPUT_DIR=".."
COMPILER="GCC"
COMPILER="CLANG"

func_help()
{
	echo 'c,-c,--clean: clean'
	echo 'f,-f,--full: clean then build'
	echo 'no parameter: normal build'
}

func_clean()
{
	start_time=$(date +%s.%N)
	echo "Cleaning..."
	rm -rf ./Release ./Debug ./RelWithDebInfo ./build.log ./${PROJECT_NAME}_${BUILD_TYPE} ./build.log
	echo "Cleaning complete."
	end_time=$(date +%s.%N)
	func_calculate_duration true
}

func_build()
{
	start_time=$(date +%s.%N)
	mkdir -p "$BUILD_DIR"
	pushd "$BUILD_DIR"

	cmake -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DCOMPILER="${COMPILER}" .. 2>&1 | tee ../build.log
	make -j 2>&1 | tee -a ../build.log
	cp ./${PROJECT_NAME} $OUTPUT_DIR/${PROJECT_NAME}_${BUILD_TYPE}
	sync
	popd
	end_time=$(date +%s.%N)
	func_calculate_duration
}

func_run()
{
	start_time=$(date +%s.%N)
	./${PROJECT_NAME}_${BUILD_TYPE}
	end_time=$(date +%s.%N)
	func_calculate_duration
}

func_calculate_duration()
{
	duration=$(bc <<< "$end_time - $start_time")
	local is_clean_only=$1
	if [ $is_clean_only ]
	then 
		echo
		echo '################################################################################'
		echo "Duration: $(printf '%.6f' $duration) (s)"
		echo '################################################################################'
		echo
		return
	fi

	echo | tee -a build.log
	echo '################################################################################' | tee -a build.log
	echo "Duration: $(printf '%.6f' $duration) (s)" | tee -a build.log
	echo '################################################################################' | tee -a build.log
	echo | tee -a build.log
}

if [ "$1" = "--clean" ] || [ "$1" = "-c" ] || [ "$1" = "c" ]
then
	func_clean
	exit 0
elif [ "$1" = "--full" ] || [ "$1" = "-f" ] || [ "$1" = "f" ]
then
	func_clean
	func_build
elif [ "$1" = "--run" ] || [ "$1" = "-r" ] || [ "$1" = "r" ]
then
	func_build
	func_run
elif [ "$1" != "" ]
then
	func_help
else
	func_build
fi
exit 0
